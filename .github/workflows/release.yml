# .github/workflows/release.yml

name: Build and Release

# This workflow runs when a new tag starting with 'v' is pushed to the repository.
on:
  push:
    tags:
      - 'v*'

# Defines the permissions required by the jobs in this workflow.
# 'contents: write' is necessary for the release job to create a release and upload assets.
permissions:
  contents: write

jobs:
  # The 'build' job is responsible for compiling the Go application for different architectures.
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Defines a matrix of architectures to build for.
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod' # Automatically uses the Go version from your go.mod file

      - name: Build for windows/${{ matrix.goarch }}
        run: |
          # Cross-compiles for Windows. The -ldflags strip debug info to reduce binary size.
          GOOS=windows GOARCH=${{ matrix.goarch }} go build -o mpv-handler-${{ matrix.goarch }}.exe -ldflags="-s -w" ./cmd/mpv-handler

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mpv-handler-${{ matrix.goarch }} # Unique name for each artifact
          path: mpv-handler-${{ matrix.goarch }}.exe

  # The 'release' job runs after all 'build' jobs have completed successfully.
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts # Download all artifacts into an 'artifacts' directory

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # The files to upload. The pattern will find all .exe files within the subdirectories.
          files: artifacts/**/*.exe